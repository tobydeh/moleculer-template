apiVersion: v1
kind: Service
metadata:
  name: nats-service
spec:
  ports:
  - port: 4222
    targetPort: 4222
  selector:
    name: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-deployment
spec:
  selector:
    matchLabels:
      name: nats
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: nats
    spec:
      containers:
      - image: nats
        name: nats
        args: [ "--config", "/etc/nats/config/nats.conf"]
        ports:
        - containerPort: 4222
        resources: {}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nats/config
            readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: nats-config
      restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  nats.conf: |
    # Client port of 4222 on all interfaces
    port: 4222

    # HTTP monitoring port
    monitor_port: 8222

    # Max message payload
    max_payload: 4Mb

    # This is for clustering multiple servers together.
    cluster {
      # It is recommended to set a cluster name
      name: "moleculer"

      # Route connections to be received on any interface on port 6222
      port: 6222

      # Routes are protected, so need to use them with --routes flag
      # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
      authorization {
        user: ruser
        password: T0pS3cr3t
        timeout: 0.75
      }

      # Routes are actively solicited and connected to from this server.
      # This Docker image has none by default, but you can pass a
      # flag to the nats-server docker image to create one to an existing server.
      routes = []
    }
